PROGRAM pointUpdate
%COMMENT = '0.0.0.0 - 00'
%RWACCESS
%STACKSIZE = 4000
%NOPAUSE = ERROR+COMMAND+TPENABLE
%NOLOCKGROUP
%ALPHABETIZE
%ENVIRONMENT REGOPE
%INCLUDE KLEVKEYS
%INCLUDE KLEVKMSK
%INCLUDE KLEVCCDF
%INCLUDE KLIOUOP
%INCLUDE KLIOTYPS
--传入pr20，根据point1与变换矩阵计算新pr20写入pr20
----------------------------------------------------

VAR
status : INTEGER
point1,pointSrc,pointDst,pointTemp : XYZWPR
m1,m2,m3,m4,m5,m6,m7,m8,m9,m10,m11,m12,m13,m14,m15,m16 : REAL
m : INTEGER
t : REAL
workPos : INTEGER
workPosOffset,nextOffset,offset_reg : XYZWPR
real_flag : BOOLEAN

----------------------------------------------------
-- BEGIN pointUpdate                            
----------------------------------------------------
BEGIN
    m1 = 0
    m2 = 0
    m3 = 0
    m4 = 0
    m5 = 0
    m6 = 0
    m7 = 0
    m8 = 0
    m9 = 0
    m10 = 0
    m11 = 0
    m12 = 0
    m13 = 0
    m14 = 0
    m15 = 0
    m16 = 0
    point1.x = 0
    point1.y = 0
    point1.z = 0
    point1.w = 0
    point1.p = 0
    point1.r = 0

    pointSrc.x = 0
    pointSrc.y = 0
    pointSrc.z = 0
    pointSrc.w = 0
    pointSrc.p = 0
    pointSrc.r = 0

    pointDst.x = 0
    pointDst.y = 0
    pointDst.z = 0
    pointDst.w = 0
    pointDst.p = 0
    pointDst.r = 0

    pointTemp.x = 0
    pointTemp.y = 0
    pointTemp.z = 0
    pointTemp.w = 0
    pointTemp.p = 0
    pointTemp.r = 0

    workPosOffset.x = 0
    workPosOffset.y = 0
    workPosOffset.z = 0
    workPosOffset.w = 0
    workPosOffset.p = 0
    workPosOffset.r = 0

    nextOffset.x = 0
    nextOffset.y = 0
    nextOffset.z = 0
    nextOffset.w = 0
    nextOffset.p = 0
    nextOffset.r = 0

    offset_reg.x = 0
    offset_reg.y = 0
    offset_reg.z = 0
    offset_reg.w = 0
    offset_reg.p = 0
    offset_reg.r = 0

    offset_reg = GET_POS_REG(21, status)

    GET_REG(110,real_flag,m,m1,status)
    GET_REG(111,real_flag,m,m2,status)
    GET_REG(112,real_flag,m,m3,status)
    GET_REG(113,real_flag,m,m4,status)
    GET_REG(114,real_flag,m,m5,status)
    GET_REG(115,real_flag,m,m6,status)
    GET_REG(116,real_flag,m,m7,status)
    GET_REG(117,real_flag,m,m8,status)
    GET_REG(118,real_flag,m,m9,status)
    GET_REG(119,real_flag,m,m10,status)
    GET_REG(120,real_flag,m,m11,status)
    GET_REG(121,real_flag,m,m12,status)
    GET_REG(122,real_flag,m,m13,status)
    GET_REG(123,real_flag,m,m14,status)
    GET_REG(124,real_flag,m,m15,status)
    GET_REG(125,real_flag,m,m16,status)

    point1 = GET_POS_REG(10, status)
    pointSrc = GET_POS_REG(20, status)
    pointDst.x = pointSrc.x - point1.x
    pointDst.y = pointSrc.y - point1.y
    pointDst.z = pointSrc.z - point1.z
    pointDst.w = pointSrc.w
    pointDst.p = pointSrc.p
    pointDst.r = pointSrc.r


    pointTemp.x = m1 * pointDst.x + m2 * pointDst.y + m3 * pointDst.z + m4 * 1
    pointTemp.x = m5 * pointDst.x + m6 * pointDst.y + m7 * pointDst.z + m8 * 1
    pointTemp.x = m9 * pointDst.x + m10 * pointDst.y + m11 * pointDst.z + m12 * 1
    pointTemp.x = m13 * pointDst.x + m14 * pointDst.y + m15 * pointDst.z + m16 * 1

    pointDst.x = pointTemp.x + point1.x
    pointDst.y = pointTemp.y + point1.y
    pointDst.z = pointTemp.z + point1.z

    --获取两项偏置
    workPosOffset = GET_POS_REG(4, status)
    GET_REG(125,real_flag,workPos,t,status)
    nextOffset = GET_POS_REG(workPos, status)

    pointDst.x = pointDst.x + workPosOffset.x + nextOffset.x
    pointDst.y = pointDst.y + workPosOffset.y + nextOffset.y
    pointDst.z = pointDst.z + workPosOffset.z + nextOffset.z
    pointDst.w = pointDst.w + workPosOffset.w + nextOffset.w
    pointDst.p = pointDst.p + workPosOffset.p + nextOffset.p
    pointDst.r = pointDst.r + workPosOffset.r + nextOffset.r

    offset_reg.x = pointDst.x - pointSrc.x
    offset_reg.y = pointDst.y - pointSrc.y
    offset_reg.z = pointDst.z - pointSrc.z
    offset_reg.w = pointDst.w - pointSrc.w
    offset_reg.p = pointDst.p - pointSrc.p
    offset_reg.r = pointDst.r - pointSrc.r

    SET_POS_REG(21, offset_reg, status)
    WRITE(offset_reg, CR)
END pointUpdate