PROGRAM tcpserv3
%STACKSIZE = 4000
%NOLOCKGROUP
%NOPAUSE=ERROR+COMMAND+TPENABLE
%ENVIRONMENT uif
%ENVIRONMENT sysdef
%ENVIRONMENT memo
%ENVIRONMENT kclop
%ENVIRONMENT bynam
%ENVIRONMENT fdev
%ENVIRONMENT flbt
%INCLUDE klevccdf
%INCLUDE klevkeys
%INCLUDE klevkmsk
-------------------------------------------------------------------------------
VAR
file_var : FILE
tmp_int1 : INTEGER
tmp_str : STRING[128]
tmp_str1 : STRING[128]
recive_data : STRING[128]
status : INTEGER
entry : INTEGER
n : INTEGER
-------------------------------------------------------------------------------
BEGIN
    FORCE_SPMENU(TP_PANEL,SPI_TPUSER,1)
    SET_FILE_ATR(file_var, ATR_IA)
    -- set the server port before doing a connect
    SET_VAR(entry, '*SYSTEM*','$HOSTS_CFG[3].$SERVER_PORT',5233,status)
    WRITE('Connecting..',CR)
    MSG_CONNECT('S3:',status)
    WRITE('Connect Status =' ,status,CR)
    IF status = 0 THEN
        -- Open S3:
        WRITE ('Opening',CR)
        REPEAT
            OPEN FILE file_var ('rw','S3:')
            status = IO_STATUS(file_var)
            WRITE (status,CR)
            IF status = 0 THEN
                -- write an integer
                REPEAT
                    --WRITE('Reading',CR)
                    -- Read 10 bytes
                    BYTES_AHEAD(file_var, entry, status)
                    --WRITE(entry, status)
                    DELAY 100
                    READ file_var (tmp_str)
                    n = STR_LEN(tmp_str)
                    WAIT FOR n > 0
                    	DELAY 100
	                    status = IO_STATUS(file_var)
	                    --WRITE (status)
	                    -- Write 10 bytes
	                    
	                    recive_data = tmp_str
	                    WRITE ('recived data is: ', recive_data, CR)
	                    WRITE file_var('connect ok!')
	                    IF  SUB_STR(recive_data, 1, 2)='TP' THEN
	                    	WRITE ('TP START.. ', CR)
	                    	CALL_PROG(recive_data, status)
	                    	
	                    	WRITE ('TP COMPLETE', CR)
	                    	
	                    status = IO_STATUS(file_var)
	                    --WRITE (status, cr)
	                    ENDIF
                UNTIL(recive_data='stop')       
                CLOSE FILE file_var
            ENDIF
        UNTIL(recive_data='stop')
        WRITE('Disconnecting..',CR)
        MSG_DISCO('S3:',status)
        WRITE('Done.',CR)
    ENDIF
END tcpserv3	